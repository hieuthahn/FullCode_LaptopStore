#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebBTL
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="WebBanHang")]
	public partial class ModelDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertChiTietDonHang(ChiTietDonHang instance);
    partial void UpdateChiTietDonHang(ChiTietDonHang instance);
    partial void DeleteChiTietDonHang(ChiTietDonHang instance);
    partial void InsertDanhMucSanPham(DanhMucSanPham instance);
    partial void UpdateDanhMucSanPham(DanhMucSanPham instance);
    partial void DeleteDanhMucSanPham(DanhMucSanPham instance);
    partial void InsertDonHang(DonHang instance);
    partial void UpdateDonHang(DonHang instance);
    partial void DeleteDonHang(DonHang instance);
    partial void InsertGioHang(GioHang instance);
    partial void UpdateGioHang(GioHang instance);
    partial void DeleteGioHang(GioHang instance);
    partial void InsertHinhSanPham(HinhSanPham instance);
    partial void UpdateHinhSanPham(HinhSanPham instance);
    partial void DeleteHinhSanPham(HinhSanPham instance);
    partial void InsertKieuNguoiDung(KieuNguoiDung instance);
    partial void UpdateKieuNguoiDung(KieuNguoiDung instance);
    partial void DeleteKieuNguoiDung(KieuNguoiDung instance);
    partial void InsertNguoiDung(NguoiDung instance);
    partial void UpdateNguoiDung(NguoiDung instance);
    partial void DeleteNguoiDung(NguoiDung instance);
    partial void InsertSanPham(SanPham instance);
    partial void UpdateSanPham(SanPham instance);
    partial void DeleteSanPham(SanPham instance);
    partial void InsertTinhTrangDonHang(TinhTrangDonHang instance);
    partial void UpdateTinhTrangDonHang(TinhTrangDonHang instance);
    partial void DeleteTinhTrangDonHang(TinhTrangDonHang instance);
    #endregion
		
		public ModelDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["WebBanHangConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ModelDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ThongKeTruyCap> ThongKeTruyCaps
		{
			get
			{
				return this.GetTable<ThongKeTruyCap>();
			}
		}
		
		public System.Data.Linq.Table<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this.GetTable<ChiTietDonHang>();
			}
		}
		
		public System.Data.Linq.Table<DanhMucSanPham> DanhMucSanPhams
		{
			get
			{
				return this.GetTable<DanhMucSanPham>();
			}
		}
		
		public System.Data.Linq.Table<DonHang> DonHangs
		{
			get
			{
				return this.GetTable<DonHang>();
			}
		}
		
		public System.Data.Linq.Table<GioHang> GioHangs
		{
			get
			{
				return this.GetTable<GioHang>();
			}
		}
		
		public System.Data.Linq.Table<HinhSanPham> HinhSanPhams
		{
			get
			{
				return this.GetTable<HinhSanPham>();
			}
		}
		
		public System.Data.Linq.Table<KieuNguoiDung> KieuNguoiDungs
		{
			get
			{
				return this.GetTable<KieuNguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<NguoiDung> NguoiDungs
		{
			get
			{
				return this.GetTable<NguoiDung>();
			}
		}
		
		public System.Data.Linq.Table<SanPham> SanPhams
		{
			get
			{
				return this.GetTable<SanPham>();
			}
		}
		
		public System.Data.Linq.Table<TinhTrangDonHang> TinhTrangDonHangs
		{
			get
			{
				return this.GetTable<TinhTrangDonHang>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ThongKeTruyCap")]
	public partial class ThongKeTruyCap
	{
		
		private System.Nullable<int> _TongSoTruyCap;
		
		public ThongKeTruyCap()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TongSoTruyCap", DbType="Int")]
		public System.Nullable<int> TongSoTruyCap
		{
			get
			{
				return this._TongSoTruyCap;
			}
			set
			{
				if ((this._TongSoTruyCap != value))
				{
					this._TongSoTruyCap = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ChiTietDonHang")]
	public partial class ChiTietDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSanPham;
		
		private int _IdChiTietDonHang;
		
		private int _IdDonHang;
		
		private int _SoLuongSanPham;
		
		private EntityRef<DonHang> _DonHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnIdChiTietDonHangChanging(int value);
    partial void OnIdChiTietDonHangChanged();
    partial void OnIdDonHangChanging(int value);
    partial void OnIdDonHangChanged();
    partial void OnSoLuongSanPhamChanging(int value);
    partial void OnSoLuongSanPhamChanged();
    #endregion
		
		public ChiTietDonHang()
		{
			this._DonHang = default(EntityRef<DonHang>);
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChiTietDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdChiTietDonHang
		{
			get
			{
				return this._IdChiTietDonHang;
			}
			set
			{
				if ((this._IdChiTietDonHang != value))
				{
					this.OnIdChiTietDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdChiTietDonHang = value;
					this.SendPropertyChanged("IdChiTietDonHang");
					this.OnIdChiTietDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDonHang", DbType="Int NOT NULL")]
		public int IdDonHang
		{
			get
			{
				return this._IdDonHang;
			}
			set
			{
				if ((this._IdDonHang != value))
				{
					if (this._DonHang.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdDonHang = value;
					this.SendPropertyChanged("IdDonHang");
					this.OnIdDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuongSanPham", DbType="Int NOT NULL")]
		public int SoLuongSanPham
		{
			get
			{
				return this._SoLuongSanPham;
			}
			set
			{
				if ((this._SoLuongSanPham != value))
				{
					this.OnSoLuongSanPhamChanging(value);
					this.SendPropertyChanging();
					this._SoLuongSanPham = value;
					this.SendPropertyChanged("SoLuongSanPham");
					this.OnSoLuongSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_DonHang", ThisKey="IdDonHang", OtherKey="IdDonHang", IsForeignKey=true)]
		public DonHang DonHang
		{
			get
			{
				return this._DonHang.Entity;
			}
			set
			{
				DonHang previousValue = this._DonHang.Entity;
				if (((previousValue != value) 
							|| (this._DonHang.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DonHang.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._DonHang.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._IdDonHang = value.IdDonHang;
					}
					else
					{
						this._IdDonHang = default(int);
					}
					this.SendPropertyChanged("DonHang");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.ChiTietDonHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.ChiTietDonHangs.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DanhMucSanPham")]
	public partial class DanhMucSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDanhMucSanPham;
		
		private string _TenDanhMucSanPham;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDanhMucSanPhamChanging(int value);
    partial void OnIdDanhMucSanPhamChanged();
    partial void OnTenDanhMucSanPhamChanging(string value);
    partial void OnTenDanhMucSanPhamChanged();
    #endregion
		
		public DanhMucSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMucSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDanhMucSanPham
		{
			get
			{
				return this._IdDanhMucSanPham;
			}
			set
			{
				if ((this._IdDanhMucSanPham != value))
				{
					this.OnIdDanhMucSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMucSanPham = value;
					this.SendPropertyChanged("IdDanhMucSanPham");
					this.OnIdDanhMucSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDanhMucSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDanhMucSanPham
		{
			get
			{
				return this._TenDanhMucSanPham;
			}
			set
			{
				if ((this._TenDanhMucSanPham != value))
				{
					this.OnTenDanhMucSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenDanhMucSanPham = value;
					this.SendPropertyChanged("TenDanhMucSanPham");
					this.OnTenDanhMucSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucSanPham_SanPham", Storage="_SanPhams", ThisKey="IdDanhMucSanPham", OtherKey="IdDanhMucSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.DanhMucSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DonHang")]
	public partial class DonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdDonHang;
		
		private int _IdNguoiDung;
		
		private int _IdTinhTrangDonHang;
		
		private string _IdGiaoDich;
		
		private System.DateTime _NgayTaoDonHang;
		
		private System.Nullable<System.DateTime> _NgayXuLyDonHang;
		
		private string _TrackingNumber;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdDonHangChanging(int value);
    partial void OnIdDonHangChanged();
    partial void OnIdNguoiDungChanging(int value);
    partial void OnIdNguoiDungChanged();
    partial void OnIdTinhTrangDonHangChanging(int value);
    partial void OnIdTinhTrangDonHangChanged();
    partial void OnIdGiaoDichChanging(string value);
    partial void OnIdGiaoDichChanged();
    partial void OnNgayTaoDonHangChanging(System.DateTime value);
    partial void OnNgayTaoDonHangChanged();
    partial void OnNgayXuLyDonHangChanging(System.Nullable<System.DateTime> value);
    partial void OnNgayXuLyDonHangChanged();
    partial void OnTrackingNumberChanging(string value);
    partial void OnTrackingNumberChanged();
    #endregion
		
		public DonHang()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdDonHang
		{
			get
			{
				return this._IdDonHang;
			}
			set
			{
				if ((this._IdDonHang != value))
				{
					this.OnIdDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdDonHang = value;
					this.SendPropertyChanged("IdDonHang");
					this.OnIdDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", DbType="Int NOT NULL")]
		public int IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTinhTrangDonHang", DbType="Int NOT NULL")]
		public int IdTinhTrangDonHang
		{
			get
			{
				return this._IdTinhTrangDonHang;
			}
			set
			{
				if ((this._IdTinhTrangDonHang != value))
				{
					this.OnIdTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdTinhTrangDonHang = value;
					this.SendPropertyChanged("IdTinhTrangDonHang");
					this.OnIdTinhTrangDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGiaoDich", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string IdGiaoDich
		{
			get
			{
				return this._IdGiaoDich;
			}
			set
			{
				if ((this._IdGiaoDich != value))
				{
					this.OnIdGiaoDichChanging(value);
					this.SendPropertyChanging();
					this._IdGiaoDich = value;
					this.SendPropertyChanged("IdGiaoDich");
					this.OnIdGiaoDichChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTaoDonHang", DbType="SmallDateTime NOT NULL")]
		public System.DateTime NgayTaoDonHang
		{
			get
			{
				return this._NgayTaoDonHang;
			}
			set
			{
				if ((this._NgayTaoDonHang != value))
				{
					this.OnNgayTaoDonHangChanging(value);
					this.SendPropertyChanging();
					this._NgayTaoDonHang = value;
					this.SendPropertyChanged("NgayTaoDonHang");
					this.OnNgayTaoDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayXuLyDonHang", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> NgayXuLyDonHang
		{
			get
			{
				return this._NgayXuLyDonHang;
			}
			set
			{
				if ((this._NgayXuLyDonHang != value))
				{
					this.OnNgayXuLyDonHangChanging(value);
					this.SendPropertyChanging();
					this._NgayXuLyDonHang = value;
					this.SendPropertyChanged("NgayXuLyDonHang");
					this.OnNgayXuLyDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrackingNumber", DbType="NVarChar(50)")]
		public string TrackingNumber
		{
			get
			{
				return this._TrackingNumber;
			}
			set
			{
				if ((this._TrackingNumber != value))
				{
					this.OnTrackingNumberChanging(value);
					this.SendPropertyChanging();
					this._TrackingNumber = value;
					this.SendPropertyChanged("TrackingNumber");
					this.OnTrackingNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DonHang_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="IdDonHang", OtherKey="IdDonHang")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.DonHang = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GioHang")]
	public partial class GioHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdGioHang;
		
		private string _CartGuid;
		
		private int _IdSanPham;
		
		private int _SoLuong;
		
		private System.DateTime _NgayTaoGioHang;
		
		private EntityRef<SanPham> _SanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdGioHangChanging(int value);
    partial void OnIdGioHangChanged();
    partial void OnCartGuidChanging(string value);
    partial void OnCartGuidChanged();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnSoLuongChanging(int value);
    partial void OnSoLuongChanged();
    partial void OnNgayTaoGioHangChanging(System.DateTime value);
    partial void OnNgayTaoGioHangChanged();
    #endregion
		
		public GioHang()
		{
			this._SanPham = default(EntityRef<SanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdGioHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdGioHang
		{
			get
			{
				return this._IdGioHang;
			}
			set
			{
				if ((this._IdGioHang != value))
				{
					this.OnIdGioHangChanging(value);
					this.SendPropertyChanging();
					this._IdGioHang = value;
					this.SendPropertyChanged("IdGioHang");
					this.OnIdGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CartGuid", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string CartGuid
		{
			get
			{
				return this._CartGuid;
			}
			set
			{
				if ((this._CartGuid != value))
				{
					this.OnCartGuidChanging(value);
					this.SendPropertyChanging();
					this._CartGuid = value;
					this.SendPropertyChanged("CartGuid");
					this.OnCartGuidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", DbType="Int NOT NULL")]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					if (this._SanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoLuong", DbType="Int NOT NULL")]
		public int SoLuong
		{
			get
			{
				return this._SoLuong;
			}
			set
			{
				if ((this._SoLuong != value))
				{
					this.OnSoLuongChanging(value);
					this.SendPropertyChanging();
					this._SoLuong = value;
					this.SendPropertyChanged("SoLuong");
					this.OnSoLuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NgayTaoGioHang", DbType="SmallDateTime NOT NULL")]
		public System.DateTime NgayTaoGioHang
		{
			get
			{
				return this._NgayTaoGioHang;
			}
			set
			{
				if ((this._NgayTaoGioHang != value))
				{
					this.OnNgayTaoGioHangChanging(value);
					this.SendPropertyChanging();
					this._NgayTaoGioHang = value;
					this.SendPropertyChanged("NgayTaoGioHang");
					this.OnNgayTaoGioHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GioHang", Storage="_SanPham", ThisKey="IdSanPham", OtherKey="IdSanPham", IsForeignKey=true)]
		public SanPham SanPham
		{
			get
			{
				return this._SanPham.Entity;
			}
			set
			{
				SanPham previousValue = this._SanPham.Entity;
				if (((previousValue != value) 
							|| (this._SanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SanPham.Entity = null;
						previousValue.GioHangs.Remove(this);
					}
					this._SanPham.Entity = value;
					if ((value != null))
					{
						value.GioHangs.Add(this);
						this._IdSanPham = value.IdSanPham;
					}
					else
					{
						this._IdSanPham = default(int);
					}
					this.SendPropertyChanged("SanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HinhSanPham")]
	public partial class HinhSanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdHinhSanPham;
		
		private System.Data.Linq.Binary _DuLieuHinhSanPham;
		
		private string _ImagePath;
		
		private string _Link;
		
		private EntitySet<SanPham> _SanPhams;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdHinhSanPhamChanging(int value);
    partial void OnIdHinhSanPhamChanged();
    partial void OnDuLieuHinhSanPhamChanging(System.Data.Linq.Binary value);
    partial void OnDuLieuHinhSanPhamChanged();
    partial void OnImagePathChanging(string value);
    partial void OnImagePathChanged();
    partial void OnLinkChanging(string value);
    partial void OnLinkChanged();
    #endregion
		
		public HinhSanPham()
		{
			this._SanPhams = new EntitySet<SanPham>(new Action<SanPham>(this.attach_SanPhams), new Action<SanPham>(this.detach_SanPhams));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHinhSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdHinhSanPham
		{
			get
			{
				return this._IdHinhSanPham;
			}
			set
			{
				if ((this._IdHinhSanPham != value))
				{
					this.OnIdHinhSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdHinhSanPham = value;
					this.SendPropertyChanged("IdHinhSanPham");
					this.OnIdHinhSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DuLieuHinhSanPham", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary DuLieuHinhSanPham
		{
			get
			{
				return this._DuLieuHinhSanPham;
			}
			set
			{
				if ((this._DuLieuHinhSanPham != value))
				{
					this.OnDuLieuHinhSanPhamChanging(value);
					this.SendPropertyChanging();
					this._DuLieuHinhSanPham = value;
					this.SendPropertyChanged("DuLieuHinhSanPham");
					this.OnDuLieuHinhSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImagePath", DbType="NChar(100)")]
		public string ImagePath
		{
			get
			{
				return this._ImagePath;
			}
			set
			{
				if ((this._ImagePath != value))
				{
					this.OnImagePathChanging(value);
					this.SendPropertyChanging();
					this._ImagePath = value;
					this.SendPropertyChanged("ImagePath");
					this.OnImagePathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Link", DbType="NVarChar(200)")]
		public string Link
		{
			get
			{
				return this._Link;
			}
			set
			{
				if ((this._Link != value))
				{
					this.OnLinkChanging(value);
					this.SendPropertyChanging();
					this._Link = value;
					this.SendPropertyChanged("Link");
					this.OnLinkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HinhSanPham_SanPham", Storage="_SanPhams", ThisKey="IdHinhSanPham", OtherKey="IdHinhSanPham")]
		public EntitySet<SanPham> SanPhams
		{
			get
			{
				return this._SanPhams;
			}
			set
			{
				this._SanPhams.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HinhSanPham = this;
		}
		
		private void detach_SanPhams(SanPham entity)
		{
			this.SendPropertyChanging();
			entity.HinhSanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.KieuNguoiDung")]
	public partial class KieuNguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdKieuNguoiDung;
		
		private string _TenKieuNguoiDung;
		
		private EntitySet<NguoiDung> _NguoiDungs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdKieuNguoiDungChanging(int value);
    partial void OnIdKieuNguoiDungChanged();
    partial void OnTenKieuNguoiDungChanging(string value);
    partial void OnTenKieuNguoiDungChanged();
    #endregion
		
		public KieuNguoiDung()
		{
			this._NguoiDungs = new EntitySet<NguoiDung>(new Action<NguoiDung>(this.attach_NguoiDungs), new Action<NguoiDung>(this.detach_NguoiDungs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKieuNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdKieuNguoiDung
		{
			get
			{
				return this._IdKieuNguoiDung;
			}
			set
			{
				if ((this._IdKieuNguoiDung != value))
				{
					this.OnIdKieuNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdKieuNguoiDung = value;
					this.SendPropertyChanged("IdKieuNguoiDung");
					this.OnIdKieuNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenKieuNguoiDung", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenKieuNguoiDung
		{
			get
			{
				return this._TenKieuNguoiDung;
			}
			set
			{
				if ((this._TenKieuNguoiDung != value))
				{
					this.OnTenKieuNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._TenKieuNguoiDung = value;
					this.SendPropertyChanged("TenKieuNguoiDung");
					this.OnTenKieuNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuNguoiDung_NguoiDung", Storage="_NguoiDungs", ThisKey="IdKieuNguoiDung", OtherKey="IdKieuNguoiDung")]
		public EntitySet<NguoiDung> NguoiDungs
		{
			get
			{
				return this._NguoiDungs;
			}
			set
			{
				this._NguoiDungs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.KieuNguoiDung = this;
		}
		
		private void detach_NguoiDungs(NguoiDung entity)
		{
			this.SendPropertyChanging();
			entity.KieuNguoiDung = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NguoiDung")]
	public partial class NguoiDung : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdNguoiDung;
		
		private int _IdKieuNguoiDung;
		
		private string _HoTen;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _DiaChi;
		
		private string _SoDienThoai;
		
		private string _SoFax;
		
		private string _Email;
		
		private string _MaDienThoai;
		
		private EntityRef<KieuNguoiDung> _KieuNguoiDung;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdNguoiDungChanging(int value);
    partial void OnIdNguoiDungChanged();
    partial void OnIdKieuNguoiDungChanging(int value);
    partial void OnIdKieuNguoiDungChanged();
    partial void OnHoTenChanging(string value);
    partial void OnHoTenChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnDiaChiChanging(string value);
    partial void OnDiaChiChanged();
    partial void OnSoDienThoaiChanging(string value);
    partial void OnSoDienThoaiChanged();
    partial void OnSoFaxChanging(string value);
    partial void OnSoFaxChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnMaDienThoaiChanging(string value);
    partial void OnMaDienThoaiChanged();
    #endregion
		
		public NguoiDung()
		{
			this._KieuNguoiDung = default(EntityRef<KieuNguoiDung>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdNguoiDung", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdNguoiDung
		{
			get
			{
				return this._IdNguoiDung;
			}
			set
			{
				if ((this._IdNguoiDung != value))
				{
					this.OnIdNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdNguoiDung = value;
					this.SendPropertyChanged("IdNguoiDung");
					this.OnIdNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdKieuNguoiDung", DbType="Int NOT NULL")]
		public int IdKieuNguoiDung
		{
			get
			{
				return this._IdKieuNguoiDung;
			}
			set
			{
				if ((this._IdKieuNguoiDung != value))
				{
					if (this._KieuNguoiDung.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdKieuNguoiDungChanging(value);
					this.SendPropertyChanging();
					this._IdKieuNguoiDung = value;
					this.SendPropertyChanged("IdKieuNguoiDung");
					this.OnIdKieuNguoiDungChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HoTen", DbType="NVarChar(50)")]
		public string HoTen
		{
			get
			{
				return this._HoTen;
			}
			set
			{
				if ((this._HoTen != value))
				{
					this.OnHoTenChanging(value);
					this.SendPropertyChanging();
					this._HoTen = value;
					this.SendPropertyChanged("HoTen");
					this.OnHoTenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DiaChi", DbType="NVarChar(50)")]
		public string DiaChi
		{
			get
			{
				return this._DiaChi;
			}
			set
			{
				if ((this._DiaChi != value))
				{
					this.OnDiaChiChanging(value);
					this.SendPropertyChanging();
					this._DiaChi = value;
					this.SendPropertyChanged("DiaChi");
					this.OnDiaChiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoDienThoai", DbType="NVarChar(50)")]
		public string SoDienThoai
		{
			get
			{
				return this._SoDienThoai;
			}
			set
			{
				if ((this._SoDienThoai != value))
				{
					this.OnSoDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._SoDienThoai = value;
					this.SendPropertyChanged("SoDienThoai");
					this.OnSoDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SoFax", DbType="NVarChar(50)")]
		public string SoFax
		{
			get
			{
				return this._SoFax;
			}
			set
			{
				if ((this._SoFax != value))
				{
					this.OnSoFaxChanging(value);
					this.SendPropertyChanging();
					this._SoFax = value;
					this.SendPropertyChanged("SoFax");
					this.OnSoFaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="NVarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaDienThoai", DbType="NVarChar(50)")]
		public string MaDienThoai
		{
			get
			{
				return this._MaDienThoai;
			}
			set
			{
				if ((this._MaDienThoai != value))
				{
					this.OnMaDienThoaiChanging(value);
					this.SendPropertyChanging();
					this._MaDienThoai = value;
					this.SendPropertyChanged("MaDienThoai");
					this.OnMaDienThoaiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="KieuNguoiDung_NguoiDung", Storage="_KieuNguoiDung", ThisKey="IdKieuNguoiDung", OtherKey="IdKieuNguoiDung", IsForeignKey=true)]
		public KieuNguoiDung KieuNguoiDung
		{
			get
			{
				return this._KieuNguoiDung.Entity;
			}
			set
			{
				KieuNguoiDung previousValue = this._KieuNguoiDung.Entity;
				if (((previousValue != value) 
							|| (this._KieuNguoiDung.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._KieuNguoiDung.Entity = null;
						previousValue.NguoiDungs.Remove(this);
					}
					this._KieuNguoiDung.Entity = value;
					if ((value != null))
					{
						value.NguoiDungs.Add(this);
						this._IdKieuNguoiDung = value.IdKieuNguoiDung;
					}
					else
					{
						this._IdKieuNguoiDung = default(int);
					}
					this.SendPropertyChanged("KieuNguoiDung");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SanPham")]
	public partial class SanPham : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdSanPham;
		
		private int _IdDanhMucSanPham;
		
		private int _IdHinhSanPham;
		
		private string _TenSanPham;
		
		private string _MoTaSanPham;
		
		private int _GiaSanPham;
		
		private EntitySet<ChiTietDonHang> _ChiTietDonHangs;
		
		private EntitySet<GioHang> _GioHangs;
		
		private EntityRef<DanhMucSanPham> _DanhMucSanPham;
		
		private EntityRef<HinhSanPham> _HinhSanPham;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdSanPhamChanging(int value);
    partial void OnIdSanPhamChanged();
    partial void OnIdDanhMucSanPhamChanging(int value);
    partial void OnIdDanhMucSanPhamChanged();
    partial void OnIdHinhSanPhamChanging(int value);
    partial void OnIdHinhSanPhamChanged();
    partial void OnTenSanPhamChanging(string value);
    partial void OnTenSanPhamChanged();
    partial void OnMoTaSanPhamChanging(string value);
    partial void OnMoTaSanPhamChanged();
    partial void OnGiaSanPhamChanging(int value);
    partial void OnGiaSanPhamChanged();
    #endregion
		
		public SanPham()
		{
			this._ChiTietDonHangs = new EntitySet<ChiTietDonHang>(new Action<ChiTietDonHang>(this.attach_ChiTietDonHangs), new Action<ChiTietDonHang>(this.detach_ChiTietDonHangs));
			this._GioHangs = new EntitySet<GioHang>(new Action<GioHang>(this.attach_GioHangs), new Action<GioHang>(this.detach_GioHangs));
			this._DanhMucSanPham = default(EntityRef<DanhMucSanPham>);
			this._HinhSanPham = default(EntityRef<HinhSanPham>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdSanPham", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdSanPham
		{
			get
			{
				return this._IdSanPham;
			}
			set
			{
				if ((this._IdSanPham != value))
				{
					this.OnIdSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdSanPham = value;
					this.SendPropertyChanged("IdSanPham");
					this.OnIdSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdDanhMucSanPham", DbType="Int NOT NULL")]
		public int IdDanhMucSanPham
		{
			get
			{
				return this._IdDanhMucSanPham;
			}
			set
			{
				if ((this._IdDanhMucSanPham != value))
				{
					if (this._DanhMucSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdDanhMucSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdDanhMucSanPham = value;
					this.SendPropertyChanged("IdDanhMucSanPham");
					this.OnIdDanhMucSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdHinhSanPham", DbType="Int NOT NULL")]
		public int IdHinhSanPham
		{
			get
			{
				return this._IdHinhSanPham;
			}
			set
			{
				if ((this._IdHinhSanPham != value))
				{
					if (this._HinhSanPham.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIdHinhSanPhamChanging(value);
					this.SendPropertyChanging();
					this._IdHinhSanPham = value;
					this.SendPropertyChanged("IdHinhSanPham");
					this.OnIdHinhSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenSanPham", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenSanPham
		{
			get
			{
				return this._TenSanPham;
			}
			set
			{
				if ((this._TenSanPham != value))
				{
					this.OnTenSanPhamChanging(value);
					this.SendPropertyChanging();
					this._TenSanPham = value;
					this.SendPropertyChanged("TenSanPham");
					this.OnTenSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MoTaSanPham", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string MoTaSanPham
		{
			get
			{
				return this._MoTaSanPham;
			}
			set
			{
				if ((this._MoTaSanPham != value))
				{
					this.OnMoTaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._MoTaSanPham = value;
					this.SendPropertyChanged("MoTaSanPham");
					this.OnMoTaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiaSanPham", DbType="Int NOT NULL")]
		public int GiaSanPham
		{
			get
			{
				return this._GiaSanPham;
			}
			set
			{
				if ((this._GiaSanPham != value))
				{
					this.OnGiaSanPhamChanging(value);
					this.SendPropertyChanging();
					this._GiaSanPham = value;
					this.SendPropertyChanged("GiaSanPham");
					this.OnGiaSanPhamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_ChiTietDonHang", Storage="_ChiTietDonHangs", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<ChiTietDonHang> ChiTietDonHangs
		{
			get
			{
				return this._ChiTietDonHangs;
			}
			set
			{
				this._ChiTietDonHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SanPham_GioHang", Storage="_GioHangs", ThisKey="IdSanPham", OtherKey="IdSanPham")]
		public EntitySet<GioHang> GioHangs
		{
			get
			{
				return this._GioHangs;
			}
			set
			{
				this._GioHangs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DanhMucSanPham_SanPham", Storage="_DanhMucSanPham", ThisKey="IdDanhMucSanPham", OtherKey="IdDanhMucSanPham", IsForeignKey=true)]
		public DanhMucSanPham DanhMucSanPham
		{
			get
			{
				return this._DanhMucSanPham.Entity;
			}
			set
			{
				DanhMucSanPham previousValue = this._DanhMucSanPham.Entity;
				if (((previousValue != value) 
							|| (this._DanhMucSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DanhMucSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._DanhMucSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IdDanhMucSanPham = value.IdDanhMucSanPham;
					}
					else
					{
						this._IdDanhMucSanPham = default(int);
					}
					this.SendPropertyChanged("DanhMucSanPham");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="HinhSanPham_SanPham", Storage="_HinhSanPham", ThisKey="IdHinhSanPham", OtherKey="IdHinhSanPham", IsForeignKey=true)]
		public HinhSanPham HinhSanPham
		{
			get
			{
				return this._HinhSanPham.Entity;
			}
			set
			{
				HinhSanPham previousValue = this._HinhSanPham.Entity;
				if (((previousValue != value) 
							|| (this._HinhSanPham.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._HinhSanPham.Entity = null;
						previousValue.SanPhams.Remove(this);
					}
					this._HinhSanPham.Entity = value;
					if ((value != null))
					{
						value.SanPhams.Add(this);
						this._IdHinhSanPham = value.IdHinhSanPham;
					}
					else
					{
						this._IdHinhSanPham = default(int);
					}
					this.SendPropertyChanged("HinhSanPham");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_ChiTietDonHangs(ChiTietDonHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
		
		private void attach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = this;
		}
		
		private void detach_GioHangs(GioHang entity)
		{
			this.SendPropertyChanging();
			entity.SanPham = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TinhTrangDonHang")]
	public partial class TinhTrangDonHang : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdTinhTrangDonHang;
		
		private string _TenTinhTrangDonHang;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdTinhTrangDonHangChanging(int value);
    partial void OnIdTinhTrangDonHangChanged();
    partial void OnTenTinhTrangDonHangChanging(string value);
    partial void OnTenTinhTrangDonHangChanged();
    #endregion
		
		public TinhTrangDonHang()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdTinhTrangDonHang", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IdTinhTrangDonHang
		{
			get
			{
				return this._IdTinhTrangDonHang;
			}
			set
			{
				if ((this._IdTinhTrangDonHang != value))
				{
					this.OnIdTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._IdTinhTrangDonHang = value;
					this.SendPropertyChanged("IdTinhTrangDonHang");
					this.OnIdTinhTrangDonHangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenTinhTrangDonHang", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string TenTinhTrangDonHang
		{
			get
			{
				return this._TenTinhTrangDonHang;
			}
			set
			{
				if ((this._TenTinhTrangDonHang != value))
				{
					this.OnTenTinhTrangDonHangChanging(value);
					this.SendPropertyChanging();
					this._TenTinhTrangDonHang = value;
					this.SendPropertyChanged("TenTinhTrangDonHang");
					this.OnTenTinhTrangDonHangChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
